
Процедура ОбработкаПроведения(Отказ, Режим) 
	
	СформироватьДвиженияОсновныеНачисления();
	СформироватьСторноЗаписи();	
	РассчитатьОсновныеНачисления();
	РассчитатьНДФЛ();
	ВКМ_ВзаиморасчетыССотрудниками();
	
КонецПроцедуры  

Процедура СформироватьДвиженияОсновныеНачисления()
	
	Движения.ОсновныеНачисления.Записывать = Истина;
	Движения.Удержания.Записывать = Истина;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВКМ_НачисленияЗарплатыНачисления.Сотрудник КАК Сотрудник,
		|	ВКМ_НачисленияЗарплатыНачисления.ВидРасчета КАК ВидРасчета,
		|	ВКМ_НачисленияЗарплатыНачисления.ДатаНачала КАК ДатаНачала,
		|	ВКМ_НачисленияЗарплатыНачисления.ДатаОкончания КАК ДатаОкончания,
		|	ВКМ_НачисленияЗарплатыНачисления.ГрафикРаботы КАК ГрафикРаботы,
		|	ЕСТЬNULL(ВКМ_УсловияОплатыСотрудниковСрезПоследних.Оклад, 0) КАК Оклад
		|ИЗ
		|	Документ.ВКМ_НачисленияЗарплаты.Начисления КАК ВКМ_НачисленияЗарплатыНачисления
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ВКМ_УсловияОплатыСотрудников.СрезПоследних(
		|				&Период,
		|				Сотрудник В
		|					(ВЫБРАТЬ
		|						ВКМ_НачисленияЗарплатыНачисления.Сотрудник КАК Сотрудник
		|					ИЗ
		|						Документ.ВКМ_НачисленияЗарплаты.Начисления КАК ВКМ_НачисленияЗарплатыНачисления
		|					ГДЕ
		|						ВКМ_НачисленияЗарплатыНачисления.Ссылка = &Ссылка)) КАК ВКМ_УсловияОплатыСотрудниковСрезПоследних
		|		ПО ВКМ_НачисленияЗарплатыНачисления.Сотрудник = ВКМ_УсловияОплатыСотрудниковСрезПоследних.Сотрудник
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВКМ_Сотрудники КАК ВКМ_Сотрудники
		|		ПО ВКМ_НачисленияЗарплатыНачисления.Сотрудник = ВКМ_Сотрудники.Ссылка
		|ГДЕ
		|	ВКМ_НачисленияЗарплатыНачисления.Ссылка = &Ссылка
		|	И ВКМ_НачисленияЗарплатыНачисления.ВидРасчета = &Оклад
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВКМ_НачисленияЗарплатыНачисления.Сотрудник,
		|	ВКМ_НачисленияЗарплатыНачисления.ВидРасчета,
		|	ВКМ_НачисленияЗарплатыНачисления.ДатаНачала,
		|	ВКМ_НачисленияЗарплатыНачисления.ДатаОкончания,
		|	ВКМ_НачисленияЗарплатыНачисления.ГрафикРаботы,
		|	NULL
		|ИЗ
		|	Документ.ВКМ_НачисленияЗарплаты.Начисления КАК ВКМ_НачисленияЗарплатыНачисления
		|ГДЕ
		|	ВКМ_НачисленияЗарплатыНачисления.Ссылка = &Ссылка
		|	И ВКМ_НачисленияЗарплатыНачисления.ВидРасчета = &Отпуск";
	
	Запрос.УстановитьПараметр("Отпуск", ПланыВидовРасчета.ОсновныеНачисления.Отпуск);
	Запрос.УстановитьПараметр("Оклад", ПланыВидовРасчета.ОсновныеНачисления.Оклад);
	Запрос.УстановитьПараметр("Период", НачалоМесяца(Месяц));
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		Движение = Движения.ОсновныеНачисления.Добавить();
		Движение.Сторно = Ложь;
		Движение.ПериодРегистрации = НачалоМесяца(Месяц); 
		Движение.Сотрудник = Выборка.Сотрудник;
		Движение.ВидРасчета = Выборка.ВидРасчета;
		Движение.ПериодДействияНачало = Выборка.ДатаНачала;
		Движение.ПериодДействияКонец = Выборка.ДатаОкончания;
		Движение.ГрафикРаботы = Выборка.ГрафикРаботы;
        		
		Если Выборка.ВидРасчета = ПланыВидовРасчета.ОсновныеНачисления.Оклад Тогда
			Движение.Показатель = Выборка.Оклад; 
		КонецЕсли;
		
		Если Выборка.ВидРасчета = ПланыВидовРасчета.ОсновныеНачисления.Отпуск Тогда
			Движение.БазовыйПериодНачало = НачалоМесяца(ДобавитьМесяц((Месяц), -12));
		    Движение.БазовыйПериодКонец = КонецМесяца(ДобавитьМесяц((Месяц), -1));
		КонецЕсли;
		
		Движение = Движения.Удержания.Добавить();
		Движение.Сторно = Ложь; 
		Движение.ПериодРегистрации = НачалоМесяца(Месяц); 
		Движение.ВидРасчета = ПланыВидовРасчета.Удержания.НДФЛ;
		Движение.Сотрудник = Выборка.Сотрудник;
		Движение.БазовыйПериодНачало = НачалоМесяца(Месяц);
		Движение.БазовыйПериодКонец = КонецМесяца(Месяц);
		Движение.Показатель = 13; 
	КонецЦикла;
	
	Движения.ОсновныеНачисления.Записать();
	Движения.Удержания.Записать();
КонецПроцедуры
 
Процедура СформироватьСторноЗаписи()
	
	СторноЗаписи = Движения.ОсновныеНачисления.ПолучитьДополнение();
	
	Для Каждого Запись Из СторноЗаписи Цикл
		Движение = Движения.ОсновныеНачисления.Добавить();
		ЗаполнитьЗначенияСвойств(Движение, Запись);
		Движение.ПериодРегистрации = Запись.ПериодРегистрацииСторно;
		Движение.ПериодДействияНачало = Запись.ПериодДействияНачалоСторно;
		Движение.ПериодДействияКонец = Запись.ПериодДействияКонецСторно;
		Движение.Сторно = Истина;
	КонецЦикла; 
	
	СторноЗаписи = Движения.Удержания.ПолучитьДополнение();
	
	Для Каждого Запись Из СторноЗаписи Цикл
		Движение = Движения.Удержания.Добавить();
		ЗаполнитьЗначенияСвойств(Движение, Запись);
		Движение.ПериодРегистрации = Запись.ПериодРегистрацииСторно;
		Движение.ПериодДействияНачало = Запись.ПериодДействияНачалоСторно;
		Движение.ПериодДействияКонец = Запись.ПериодДействияКонецСторно;
		Движение.Сторно = Истина;
	КонецЦикла; 
		
КонецПроцедуры

Процедура РассчитатьОсновныеНачисления()
		
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ОсновныеНачисленияДанныеГрафика.НомерСтроки КАК НомерСтроки,
		|	ЕСТЬNULL(ОсновныеНачисленияДанныеГрафика.ЗначениеПериодДействия, 0) / 8 КАК План,
		|	ЕСТЬNULL(ОсновныеНачисленияДанныеГрафика.ЗначениеФактическийПериодДействия, 0) / 8 КАК Факт,
		|	ЕСТЬNULL(ВКМ_ВыполненныеСотрудникомРаботыОбороты.СуммаКОплатеОборот, 0) КАК СуммаКОплате
		|ИЗ
		|	РегистрРасчета.ОсновныеНачисления.ДанныеГрафика(
		|			Регистратор = &Ссылка
		|				И ВидРасчета = &Оклад) КАК ОсновныеНачисленияДанныеГрафика
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ВКМ_ВыполненныеСотрудникомРаботы.Обороты(&НачалоПериода, &КонецПериода, Месяц, ) КАК ВКМ_ВыполненныеСотрудникомРаботыОбороты
		|		ПО ОсновныеНачисленияДанныеГрафика.Сотрудник = ВКМ_ВыполненныеСотрудникомРаботыОбороты.Сотрудник";
	
	Запрос.УстановитьПараметр("Оклад", ПланыВидовРасчета.ОсновныеНачисления.Оклад);
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("НачалоПериода", НачалоМесяца(Дата));
	Запрос.УстановитьПараметр("КонецПериода", КонецМесяца(Дата));
	
	Выборка = Запрос.Выполнить().Выбрать();
		
	Пока Выборка.Следующий() Цикл
		Движение = Движения.ОсновныеНачисления[Выборка.НомерСтроки - 1]; 	
		
		Движение.РабДней = Выборка.Факт;		

		Если Выборка.План <> 0 Тогда
			Оклад = Движение.Показатель * Выборка.Факт / Выборка.План;
			Движение.Сумма = Оклад + Выборка.СуммаКОплате;
		Иначе 
			Движение.Сумма = 0;
		КонецЕсли;
		
		Если Движение.Сторно Тогда
			Движение.Сумма = - Движение.Сумма; 
			Движение.РабЧасов = - Движение.РабЧасов;   		
		КонецЕсли;   
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ОсновныеНачисленияБазаОсновныеНачисления.НомерСтроки КАК НомерСтроки,
		|	ОсновныеНачисленияБазаОсновныеНачисления.СуммаБаза КАК СуммаБаза,
		|	ОсновныеНачисленияБазаОсновныеНачисления.РабДнейБаза КАК РабДнейБаза,
		|	РАЗНОСТЬДАТ(ОсновныеНачисленияБазаОсновныеНачисления.ПериодДействияНачало, ОсновныеНачисленияБазаОсновныеНачисления.ПериодДействияКонец, ДЕНЬ) + 1 КАК ОтпускДней
		|ИЗ
		|	РегистрРасчета.ОсновныеНачисления.БазаОсновныеНачисления(
		|			&Измерения,
		|			&Измерения,
		|			,
		|			Регистратор = &Ссылка
		|				И ВидРасчета = &Отпуск) КАК ОсновныеНачисленияБазаОсновныеНачисления";
	
	Измерения = Новый Массив;
	Измерения.Добавить("Сотрудник");
	
	Запрос.УстановитьПараметр("Измерения", Измерения);
	Запрос.УстановитьПараметр("Отпуск", ПланыВидовРасчета.ОсновныеНачисления.Отпуск);
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл 
		
		Движение = Движения.ОсновныеНачисления[Выборка.НомерСтроки - 1];
		Сумма = Выборка.СуммаБаза / Выборка.РабДнейБаза * Выборка.ОтпускДней; 
		Движение.Сумма = Сумма;
		
		Если Движение.Сторно Тогда
			Движение.Сумма = - Движение.Сумма;				
		КонецЕсли; 
		
	КонецЦикла;
	Движения.ОсновныеНачисления.Записать(,Истина);
			
КонецПроцедуры

Процедура РассчитатьНДФЛ()

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	УдержанияБазаОсновныеНачисления.НомерСтроки КАК НомерСтроки,
		|	УдержанияБазаОсновныеНачисления.СуммаБаза КАК СуммаБаза
		|ИЗ
		|	РегистрРасчета.Удержания.БазаОсновныеНачисления(
		|			&Измерения,
		|			&Измерения,
		|			,
		|			Регистратор = &Ссылка
		|				И ВидРасчета = &НДФЛ) КАК УдержанияБазаОсновныеНачисления";
	
	Измерения = Новый Массив;
	Измерения.Добавить("Сотрудник");
	
	Запрос.УстановитьПараметр("Измерения", Измерения); 
	Запрос.УстановитьПараметр("НДФЛ", ПланыВидовРасчета.Удержания.НДФЛ);
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	Выборка = Запрос.Выполнить().Выбрать();
		
	Пока Выборка.Следующий() Цикл
		Движение = Движения.Удержания[Выборка.НомерСтроки - 1];
		Сумма = Выборка.СуммаБаза * Движение.Показатель / 100; 
		Движение.Сумма = Сумма; 
	КонецЦикла; 
	
	Движения.Удержания.Записать();	
	
КонецПроцедуры

Процедура ВКМ_ВзаиморасчетыССотрудниками()
	
		Запрос = Новый Запрос;
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	СУММА(ОсновныеНачисления.Сумма) КАК ОснНачисленияСумма,
			|	ОсновныеНачисления.Сотрудник КАК Сотрудник
			|ПОМЕСТИТЬ ВременнаяТаблица
			|ИЗ
			|	РегистрРасчета.ОсновныеНачисления КАК ОсновныеНачисления
			|ГДЕ
			|	ОсновныеНачисления.Регистратор = &Ссылка
			|
			|СГРУППИРОВАТЬ ПО
			|	ОсновныеНачисления.Сотрудник
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ВременнаяТаблица.ОснНачисленияСумма КАК НачисленияСумма,
			|	МАКСИМУМ(Удержания.Сумма) КАК УдержанияСумма,
			|	Удержания.Сотрудник КАК Сотрудник
			|ИЗ
			|	ВременнаяТаблица КАК ВременнаяТаблица
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрРасчета.Удержания КАК Удержания
			|		ПО ВременнаяТаблица.Сотрудник = Удержания.Сотрудник
			|ГДЕ
			|	Удержания.Регистратор = &Ссылка
			|
			|СГРУППИРОВАТЬ ПО
			|	Удержания.Сотрудник,
			|	ВременнаяТаблица.ОснНачисленияСумма";
			
		Запрос.УстановитьПараметр("Ссылка", Ссылка);
		
		Выборка = Запрос.Выполнить().Выбрать();
		
		Пока Выборка.Следующий() Цикл
			
			Движение = Движения.ВКМ_ВзаиморасчетыССотрудниками.Добавить();
			Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
			Движение.Период = Дата;
			Движение.Сотрудник = Выборка.Сотрудник;
			Движение.Сумма = Выборка.НачисленияСумма - Выборка.УдержанияСумма; 
		КонецЦикла; 
		
	Движения.ВКМ_ВзаиморасчетыССотрудниками.Записать();

КонецПроцедуры




		